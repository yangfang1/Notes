SQL
数据：
数据库： 数据的集合
数据库管理系统：DBMS:MySQL SQLServer
数据库系统模式：内模式，模式，外模式
	模式：表结构（有行有列；二维表；不包含数据）
	内模式：存储模式（管理如何存储物理的数据）
	外模式：视图（数据库里面的视图）
		视图：1. 通过create建立的
		     2. 写sql语句出来的
   这种系统模式的好处：模式跟模式之间存在映像，不直接产生影响
   逻辑独立性、物理独立性
   映像： 
       外模式-模式（概念模式）
       内模式-模式（概念模式）

数据库设计
	四个步骤：
	需求分析-> 数据流图、数据字典、需求说明书
	概念结构设计-> ER图，可能出现ER合并
	              ER合并可能出现冲突：属性冲突、命名冲突、结构冲突

    逻辑设计-> 关系模式
    物理设计

数据模型
    概念模型：ER-模型
    基本数据模型：关系模型（所有的设计一定要形成关系模型）
数据模型三要素
	数据结构（所研究的数据类型的集合）
	数据操作（对数据库内各种对象的实例所允许执行的操作的集合）
	数据的约束条件（一组完整性规则的集合））——重点
		实体完整性：实体的主属性不能取空值
		参照完整性：1.被引用的外键必须在参照表的主键中存在这个值；2.若表中的主键某一值被另外一个表所引用（外键），则不可删除这一主键所在的行，除非删除引用
		用户定义完整性：
关系模型
	关系
	元组
	属性
	域: 属性的取值范围
	关键字
	关键模式：关键字（属性1，属性2,...属性N)
模型转换
    ER模型转换为关系模型：一个实体都对应一个关系模式
    模式之间的关系：
    1. 一对一（1：1）直接转成两个关系模式即可
    2. 一对多（1：N或者1：*）直接转成两个关系模式，也可以再加一个专门表示两者关系的模式
    3. 多对多（N:N或者*：*）两个实体关系模式中，必须要加一个表示两者关系的关系模式，表示两者关系的模式的主键是联合主键，就是两个实体关系模式的主键联合


关系代数
集合运算符
	1. U（并集）合并两个关系的所有记录
	2. -（差集）特殊记忆，S1-S2表示结果中S1有的记录但是S2没有的，S2-S1表示结果中，S2有，但是S1没有的记录，所以，谁在前，谁在后很重要
	3. ∩（交集）两个关系中相等的记录
	4. x (笛卡尔集) 行相乘，列相加，遇到相同的字段名需要改名
专有运算符
    1. 选择（δ）选择出表中满足条件的元组（行）
    2. 投影（Π）选择出表中满足条件的属性（列）
    3. 连接
       1. 等值链接
       2. 自然链接（重要）
       3. 左外连接
       4. 右外链接
逻辑运算符 


函数依赖及范式
	1. 函数依赖：给定一个X，能唯一确定Y;例如：	Y=X*X;就称X确定Y，或者说Y依赖于X，记作X->Y,X称作决定因素			
		1. 完全函数依赖
		2. 部分函数依赖（只有符合主键才会出现这种情况）
		3. 传递依赖
	2. Armstrong公理
	    1. 自反律： 若X是Y的子集，则X->Y
	    2. 增广律：若X->Y,Z是U的子集，则XZ->YZ
	    3. 传递律：若X->Y;Y->Z,则X->Z

范式
	1. 范式1：表里面不许再出现小表
	2. 范式2： 前提：满足第一范式；每个非主属性完全函数依赖于任何一个候选码