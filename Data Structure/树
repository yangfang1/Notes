树
1.树
概念：树是一种非线性结构，树中的每一个元素都可以有一个或两个直接后继元素（子元素）
	1.根节点：只有出度没有入度的节点成为根结点（整棵树只有一个）
	2.双亲节点：父节点
	2.孩子节点：每个节点的后继元素成为该节点的孩子节点
	3.兄弟节点：拥有相同双亲节点的节点
	4.叶子节点：只有入度没有出度的节点
	5.度：孩子节点的个数
	6.深度:层次的数量
2.二叉树
概念：二叉树是n个节点的集合，与树的区别在于每个根节点最多只有两个孩子节点
1.二叉树的第i层最多有2^i-1个节点
2.高度为k的二叉树总共有2^k-1个节点（等比数列求和）
3.对于任何一颗完整的二叉树，叶子节点等于双分支节点的数量+1
4.具有n个节点的完全二叉树的层数是log2n+1
5.按顺序排列完全二叉树的所有节点，假设节点有n个，存在第i个节点（0<=i<=n）
	1.如果i=1，则i是根结点，无双亲；否则第i个节点的双亲节点是i/2取整
	2.如果2i>n，则该节点无左孩子，否则该节点的左孩子为2i
	3.如果2i+1>n，则该节点无有孩子，否则该节点的右孩子为2i+1
5.二叉树分类
	1.满二叉树：每一层都是满节点
	2.完全二叉树：第k-1层是满节点，第k层从左到右是满的
	3.非完全二叉树

3.二叉树存储结构
	1.顺序存储
	2.链式存储 
		二叉链表：在链式存储的二叉树中，每一个节点（也叫二叉链表）都包含三个字段：一个数据域用于存储数据，和两个指针域用于链接其左孩子节点和右孩子节点。因此，“每个二叉链表存储一个二叉节点”这句话的意思是，每个节点用于存储二叉树中的一个元素，并通过指针链接其子节点。“头指针指向根结点”这句话则表示，二叉树的链式存储通常会有一个头指针指向树的根节点。这个头指针是起始点，通过它我们可以访问到二叉树的所有节点。它起到一个起始访问的作用，和链表中的头指针类似。通过头指针，我们可以找到根节点，然后再通过根节点的左右指针，访问到其左子树和右子树，依此类推，遍历整个二叉树。
4.二叉树的遍历
	1.先序遍历（前序遍历）:根左右
	2.中序遍历：左根右 
	3.后续遍历：左右根
	4.层次遍历：从上至下，从左至右